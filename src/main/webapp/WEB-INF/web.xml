<?xml version="1.0" encoding="UTF-8" ?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">

	<display-name>ChinaCreator Enterprise-Development Platform Product</display-name>

	<!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓系统基础配置，请勿修改↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
	<!-- 平台中跟WebApplicationContext配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:c2-core-context.xml,classpath*:context/*-context.xml,classpath*:custom/*-context.xml</param-value>
	</context-param>

	<!-- 平台全局属性初始化 -->
	<listener>
		<listener-class>com.chinacreator.c2.web.init.ServerInitListener</listener-class>
	</listener>

	<!-- ApplicationContext初始化 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 平台扩展初始化 -->
	<listener>
		<listener-class>com.chinacreator.c2.web.init.StartupsInitListener</listener-class>
	</listener>

	<!-- 平台Servlet注册 -->
	<servlet>
		<servlet-name>C2 Core Servlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:web-core-context.xml,classpath*:web/*-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>C2 Core Servlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- 编码统一使用UTF-8 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ 系统基础配置，请勿修改 ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ -->

	<!-- 消息中心 -->
	<!--<servlet> -->
	<!--<description>AtmosphereServlet</description> -->
	<!--<servlet-name>AtmosphereServlet</servlet-name> -->
	<!--<servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class> -->
	<!--<init-param> -->
	<!--<param-name>org.atmosphere.cpr.packages</param-name> -->
	<!--<param-value>com.chinacreator.ccep.bf.notification.service</param-value> -->
	<!--</init-param> -->
	<!--<init-param> -->
	<!--<param-name>org.atmosphere.cpr.Broadcaster.supportOutOfOrderBroadcast</param-name> -->
	<!--<param-value>false</param-value> -->
	<!--</init-param> -->
	<!--<load-on-startup>0</load-on-startup> -->
	<!--</servlet> -->
	<!--<servlet-mapping> -->
	<!--<servlet-name>AtmosphereServlet</servlet-name> -->
	<!--<url-pattern>/msg/*</url-pattern> -->
	<!--</servlet-mapping> -->

	<!-- 系统管理基础过滤器 -->
	<!-- <filter> <filter-name>springSecurityFilterChain</filter-name> <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
		</filter> <filter-mapping> <filter-name>springSecurityFilterChain</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->
	<!-- 支持CAS单点登录 -->
	<!-- <listener> <listener-class> org.jasig.cas.client.session.SingleSignOutHttpSessionListener 
		</listener-class> </listener> -->

	<!-- shiro配置开始 -->
	<filter>
		<filter-name>shiroOAuth2SSOFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>shiroOAuth2SSOFilter</param-value>
		</init-param>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>clientId</param-name>
			<!-- (必填项)客户端ID -->
			<param-value>5172F3B6A60A48DC84EE12CAE92131B0</param-value>
		</init-param>
		<init-param>
			<param-name>clientSecret</param-name>
			<!-- (必填项)客户端安全KEY -->
			<param-value>64493AF795BC411BA02224E854CFB97A</param-value>
		</init-param>
		<init-param>
			<param-name>authrizationServerUrl</param-name>
			<!-- (必填项)c2统一认证授权服务器地址 -->
			<param-value>http://rd.unlcn.com/sso</param-value>
		</init-param>
		<init-param>
			<param-name>authrizationServerInnerUrl</param-name>
			<!-- (可选项)c2统一认证授权服务器内部地址，如果为空，则使用authrizationServerUrl项的值 -->
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>clientUrl</param-name>
			<!-- (必填项)客户端地址 -->
			<param-value>http://192.168.0.139:8080</param-value>
		</init-param>
		<init-param>
			<param-name>enableCredentialCache</param-name>
			<!-- (可选项，默认为false) 每次请求客户端与服务器是否同步校验 如果为true,客户端从cookie中获取accessToken后，再从服务端获取用户信息是否存在 
				如果为false,客户端只判断cookie中accessToken是否存在 -->
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>authenticateSpi</param-name>
			<!-- (可选项，默认为com.chinacreator.asp.comp.sys.oauth2.sso.client.spi.SysMgrOAuth2SSOFilterSpiImpl) 
				c2身份认证切面接口，包括认证成功后在客户端中回调和登出动作的后续处理拦截器spi接口实现类 必须实现com.chinacreator.asp.comp.sys.oauth2.common.spi.OAuth2AuthenticateSpi -->
			<param-value>com.chinacreator.asp.comp.sys.oauth2.sso.client.spi.SysMgrOAuth2SSOFilterSpiImpl</param-value>
		</init-param>
		<init-param>
			<param-name>authrizationSpi</param-name>
			<!-- (可选项，默认为com.chinacreator.asp.comp.sys.oauth2.sso.client.spi.SysMgrOAuth2SSOFilterSpiImpl) 
				c2凭证校验切面接口，包括凭证校验成功后在客户端中回调和凭证校验失败的后续处理拦截器spi接口实现类 必须实现com.chinacreator.asp.comp.sys.oauth2.common.spi.OAuth2AuthrizationSpi -->
			<param-value>com.chinacreator.asp.comp.sys.oauth2.sso.client.spi.SysMgrOAuth2SSOFilterSpiImpl</param-value>
		</init-param>
		<init-param>
			<param-name>scopeProvider</param-name>
			<!-- (可选项) c2统一认证授权资源Scope提供接口实现类 必须实现com.chinacreator.asp.comp.sys.oauth2.common.ScopeProvider -->
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>scopes</param-name>
			<!-- (可选项)访问资源权限范围 ，如果有多个值，用逗号分隔 -->
			<param-value>user.read</param-value>
		</init-param>
		<init-param>
			<param-name>allowOrigins</param-name>
			<!-- (可选项)允许访问的域名，多个域名之间用逗号分隔 -->
			<param-value></param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroOAuth2SSOFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- shiro配置结束 -->



	<!-- 正式环境如下 -->
	<!-- <filter> <filter-name>shiroOAuth2SSOFilter</filter-name> <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
		<init-param> <param-name>targetBeanName</param-name> <param-value>shiroOAuth2SSOFilter</param-value> 
		</init-param> <init-param> <param-name>targetFilterLifecycle</param-name> 
		<param-value>true</param-value> </init-param> rd参数 <init-param> <param-name>clientId</param-name> 
		<param-value>1585A9C8C2BC4F04A4C481595EA9BB74</param-value> </init-param> 
		<init-param> <param-name>clientSecret</param-name> <param-value>D7BC1D5CCB434C8CB1BEBC7FD1966ACF</param-value> 
		</init-param> <init-param> <param-name>serverUrl</param-name> <param-value>http://rd.unlcn.com/sso</param-value> 
		</init-param> <init-param> <param-name>serverInnerUrl</param-name> <param-value>http://10.20.30.113:8080/sso</param-value> 
		</init-param> <init-param> <param-name>clientUrl</param-name> <param-value>http://rd.unlcn.com/tps</param-value> 
		</init-param> <init-param> <param-name>synValidate</param-name> <param-value>false</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>shiroOAuth2SSOFilter</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->
	<servlet>
		<servlet-name>ExcelController</servlet-name>
		<servlet-class>com.unlcn.ils.tps.excel.ExcelController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ExcelController</servlet-name>
		<url-pattern>/servlet/ExcelController</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>QuotationHeadController</servlet-name>
		<servlet-class>com.unlcn.ils.tps.excel.QuotationHeadController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>QuotationHeadController</servlet-name>
		<url-pattern>/servlet/QuotationHeadController</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>ExcelController_checkHead</servlet-name>
		<servlet-class>com.unlcn.ils.tps.excel.CheckExcelExportController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ExcelController_checkHead</servlet-name>
		<url-pattern>/servlet/ExcelController_checkHead</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>ReportServer</servlet-name>
		<servlet-class>com.fr.web.ReportServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>ReportServer</servlet-name>
		<url-pattern>/ReportServer</url-pattern>
	</servlet-mapping>
</web-app>

